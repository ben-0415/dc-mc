"use strict";
/*
 * Copyright (c) 2020-2022 原神資訊站 Genshin Impact Info
 * https://genshininfo.reh.tw/
 *
 * Developed by 旋風之音 GoneTone
 * https://github.com/GoneTone
 *
 *                               _oo0oo_
 *                              o8888888o
 *                              88" . "88
 *                              (| -_- |)
 *                              0\  =  /0
 *                            ___/`---'\___
 *                          .' \\|     |# '.
 *                         / \\|||  :  |||# \
 *                        / _||||| -:- |||||- \
 *                       |   | \\\  -  #/ |   |
 *                       | \_|  ''\---/''  |_/ |
 *                       \  .-\__  '-'  ___/-. /
 *                     ___'. .'  /--.--\  `. .'___
 *                  ."" '<  `.___\_<|>_/___.' >' "".
 *                 | | :  `- \`.;`\ _ /`;.`/ - ` : | |
 *                 \  \ `_.   \_ __\ /__ _/   .-` /  /
 *             =====`-.____`.___ \_____/___.-`___.-'=====
 *                               `=---='
 *           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *               佛祖保佑                       永無 BUG
 *
 * GitHub: https://github.com/GoneTone/node-hoyowiki-api
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Entry = void 0;
const api_1 = require("../utils/api");
const HoYoWikiAPIError_1 = require("../errors/HoYoWikiAPIError");
class Entry {
    /**
     * Get Entry Page Data
     *
     * @param {number} entryId Entry ID
     *
     * @returns {Promise<CharacterPage | WeaponPage | ArtifactPage | EnemyPage | MaterialPage | NpcPage | AnimalPage | BookPage | TutorialPage>}
     */
    async get(entryId) {
        var _a, _b, _c;
        const response = await api_1.axiosInstance.get('/entry_page', {
            params: {
                entry_page_id: entryId
            }
        });
        if (((_a = response.data) === null || _a === void 0 ? void 0 : _a.retcode) === 404)
            throw new HoYoWikiAPIError_1.HoYoWikiAPIError(`Entry ID "${entryId}" is invalid.`, response.data.retcode);
        if (((_b = response.data) === null || _b === void 0 ? void 0 : _b.retcode) === 0)
            return response.data.data.page;
        throw new HoYoWikiAPIError_1.HoYoWikiAPIError(`Unable to get data, entry id: ${entryId}.`, (_c = response.data) === null || _c === void 0 ? void 0 : _c.retcode);
    }
}
exports.Entry = Entry;
//# sourceMappingURL=Entry.js.map