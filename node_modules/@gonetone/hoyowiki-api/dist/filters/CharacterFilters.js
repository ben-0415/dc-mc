"use strict";
/*
 * Copyright (c) 2020-2022 原神資訊站 Genshin Impact Info
 * https://genshininfo.reh.tw/
 *
 * Developed by 旋風之音 GoneTone
 * https://github.com/GoneTone
 *
 *                               _oo0oo_
 *                              o8888888o
 *                              88" . "88
 *                              (| -_- |)
 *                              0\  =  /0
 *                            ___/`---'\___
 *                          .' \\|     |# '.
 *                         / \\|||  :  |||# \
 *                        / _||||| -:- |||||- \
 *                       |   | \\\  -  #/ |   |
 *                       | \_|  ''\---/''  |_/ |
 *                       \  .-\__  '-'  ___/-. /
 *                     ___'. .'  /--.--\  `. .'___
 *                  ."" '<  `.___\_<|>_/___.' >' "".
 *                 | | :  `- \`.;`\ _ /`;.`/ - ` : | |
 *                 \  \ `_.   \_ __\ /__ _/   .-` /  /
 *             =====`-.____`.___ \_____/___.-`___.-'=====
 *                               `=---='
 *           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *               佛祖保佑                       永無 BUG
 *
 * GitHub: https://github.com/GoneTone/node-hoyowiki-api
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CharacterFilters = void 0;
const api_1 = require("../utils/api");
require("../utils/constants");
class CharacterFilters {
    static async setFilterIds() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86;
        const response = await api_1.axiosInstance.get('/get_menu_filters', {
            params: {
                menu_id: "2" /* EntryPageMenu.Character */
            }
        });
        const filters = response.data.data.filters;
        this.ElementalType = {
            Pyro: (_c = (_b = (_a = filters[0]) === null || _a === void 0 ? void 0 : _a.values[0]) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : '737',
            Hydro: (_f = (_e = (_d = filters[0]) === null || _d === void 0 ? void 0 : _d.values[1]) === null || _e === void 0 ? void 0 : _e.id) !== null && _f !== void 0 ? _f : '745',
            Dendro: (_j = (_h = (_g = filters[0]) === null || _g === void 0 ? void 0 : _g.values[2]) === null || _h === void 0 ? void 0 : _h.id) !== null && _j !== void 0 ? _j : '763',
            Electro: (_m = (_l = (_k = filters[0]) === null || _k === void 0 ? void 0 : _k.values[3]) === null || _l === void 0 ? void 0 : _l.id) !== null && _m !== void 0 ? _m : '780',
            Anemo: (_q = (_p = (_o = filters[0]) === null || _o === void 0 ? void 0 : _o.values[4]) === null || _p === void 0 ? void 0 : _p.id) !== null && _q !== void 0 ? _q : '789',
            Cryo: (_t = (_s = (_r = filters[0]) === null || _r === void 0 ? void 0 : _r.values[5]) === null || _s === void 0 ? void 0 : _s.id) !== null && _t !== void 0 ? _t : '803',
            Geo: (_w = (_v = (_u = filters[0]) === null || _u === void 0 ? void 0 : _u.values[6]) === null || _v === void 0 ? void 0 : _v.id) !== null && _w !== void 0 ? _w : '814'
        };
        this.Region = {
            Mondstadt: (_z = (_y = (_x = filters[1]) === null || _x === void 0 ? void 0 : _x.values[0]) === null || _y === void 0 ? void 0 : _y.id) !== null && _z !== void 0 ? _z : '27',
            LiyueHarbor: (_2 = (_1 = (_0 = filters[1]) === null || _0 === void 0 ? void 0 : _0.values[1]) === null || _1 === void 0 ? void 0 : _1.id) !== null && _2 !== void 0 ? _2 : '43',
            InazumaCity: (_5 = (_4 = (_3 = filters[1]) === null || _3 === void 0 ? void 0 : _3.values[2]) === null || _4 === void 0 ? void 0 : _4.id) !== null && _5 !== void 0 ? _5 : '60',
            Snezhnaya: (_8 = (_7 = (_6 = filters[1]) === null || _6 === void 0 ? void 0 : _6.values[3]) === null || _7 === void 0 ? void 0 : _7.id) !== null && _8 !== void 0 ? _8 : '1414',
            Sumeru: (_11 = (_10 = (_9 = filters[1]) === null || _9 === void 0 ? void 0 : _9.values[4]) === null || _10 === void 0 ? void 0 : _10.id) !== null && _11 !== void 0 ? _11 : '1418',
            Fontaine: (_14 = (_13 = (_12 = filters[1]) === null || _12 === void 0 ? void 0 : _12.values[5]) === null || _13 === void 0 ? void 0 : _13.id) !== null && _14 !== void 0 ? _14 : '1434',
            Natlan: (_17 = (_16 = (_15 = filters[1]) === null || _15 === void 0 ? void 0 : _15.values[6]) === null || _16 === void 0 ? void 0 : _16.id) !== null && _17 !== void 0 ? _17 : '1450'
        };
        this.Quality = {
            Star5: (_20 = (_19 = (_18 = filters[2]) === null || _18 === void 0 ? void 0 : _18.values[0]) === null || _19 === void 0 ? void 0 : _19.id) !== null && _20 !== void 0 ? _20 : '3',
            Star4: (_23 = (_22 = (_21 = filters[2]) === null || _21 === void 0 ? void 0 : _21.values[1]) === null || _22 === void 0 ? void 0 : _22.id) !== null && _23 !== void 0 ? _23 : '16'
        };
        this.BonusAttributesFromAscension = {
            CRITDMG: (_26 = (_25 = (_24 = filters[3]) === null || _24 === void 0 ? void 0 : _24.values[0]) === null || _25 === void 0 ? void 0 : _25.id) !== null && _26 !== void 0 ? _26 : '456',
            ElementalMastery: (_29 = (_28 = (_27 = filters[3]) === null || _27 === void 0 ? void 0 : _27.values[1]) === null || _28 === void 0 ? void 0 : _28.id) !== null && _29 !== void 0 ? _29 : '481',
            EnergyRecharge: (_32 = (_31 = (_30 = filters[3]) === null || _30 === void 0 ? void 0 : _30.values[2]) === null || _31 === void 0 ? void 0 : _31.id) !== null && _32 !== void 0 ? _32 : '488',
            CRITRate: (_35 = (_34 = (_33 = filters[3]) === null || _33 === void 0 ? void 0 : _33.values[3]) === null || _34 === void 0 ? void 0 : _34.id) !== null && _35 !== void 0 ? _35 : '501',
            HP: (_38 = (_37 = (_36 = filters[3]) === null || _36 === void 0 ? void 0 : _36.values[4]) === null || _37 === void 0 ? void 0 : _37.id) !== null && _38 !== void 0 ? _38 : '515',
            HealingBonus: (_41 = (_40 = (_39 = filters[3]) === null || _39 === void 0 ? void 0 : _39.values[5]) === null || _40 === void 0 ? void 0 : _40.id) !== null && _41 !== void 0 ? _41 : '529',
            PhysicalDMGBonus: (_44 = (_43 = (_42 = filters[3]) === null || _42 === void 0 ? void 0 : _42.values[6]) === null || _43 === void 0 ? void 0 : _43.id) !== null && _44 !== void 0 ? _44 : '541',
            ATK: (_47 = (_46 = (_45 = filters[3]) === null || _45 === void 0 ? void 0 : _45.values[7]) === null || _46 === void 0 ? void 0 : _46.id) !== null && _47 !== void 0 ? _47 : '558',
            DEF: (_50 = (_49 = (_48 = filters[3]) === null || _48 === void 0 ? void 0 : _48.values[8]) === null || _49 === void 0 ? void 0 : _49.id) !== null && _50 !== void 0 ? _50 : '560',
            PyroDMGBonus: (_53 = (_52 = (_51 = filters[3]) === null || _51 === void 0 ? void 0 : _51.values[9]) === null || _52 === void 0 ? void 0 : _52.id) !== null && _53 !== void 0 ? _53 : '584',
            HydroDMGBonus: (_56 = (_55 = (_54 = filters[3]) === null || _54 === void 0 ? void 0 : _54.values[10]) === null || _55 === void 0 ? void 0 : _55.id) !== null && _56 !== void 0 ? _56 : '594',
            DendroDMGBonus: (_59 = (_58 = (_57 = filters[3]) === null || _57 === void 0 ? void 0 : _57.values[11]) === null || _58 === void 0 ? void 0 : _58.id) !== null && _59 !== void 0 ? _59 : '609',
            ElectroDMGBonus: (_62 = (_61 = (_60 = filters[3]) === null || _60 === void 0 ? void 0 : _60.values[12]) === null || _61 === void 0 ? void 0 : _61.id) !== null && _62 !== void 0 ? _62 : '615',
            CryoDMGBonus: (_65 = (_64 = (_63 = filters[3]) === null || _63 === void 0 ? void 0 : _63.values[13]) === null || _64 === void 0 ? void 0 : _64.id) !== null && _65 !== void 0 ? _65 : '628',
            AnemoDMGBonus: (_68 = (_67 = (_66 = filters[3]) === null || _66 === void 0 ? void 0 : _66.values[14]) === null || _67 === void 0 ? void 0 : _67.id) !== null && _68 !== void 0 ? _68 : '649',
            GeoDMGBonus: (_71 = (_70 = (_69 = filters[3]) === null || _69 === void 0 ? void 0 : _69.values[15]) === null || _70 === void 0 ? void 0 : _70.id) !== null && _71 !== void 0 ? _71 : '661'
        };
        this.WeaponType = {
            Sword: (_74 = (_73 = (_72 = filters[4]) === null || _72 === void 0 ? void 0 : _72.values[0]) === null || _73 === void 0 ? void 0 : _73.id) !== null && _74 !== void 0 ? _74 : '72',
            Claymore: (_77 = (_76 = (_75 = filters[4]) === null || _75 === void 0 ? void 0 : _75.values[1]) === null || _76 === void 0 ? void 0 : _76.id) !== null && _77 !== void 0 ? _77 : '81',
            Bow: (_80 = (_79 = (_78 = filters[4]) === null || _78 === void 0 ? void 0 : _78.values[2]) === null || _79 === void 0 ? void 0 : _79.id) !== null && _80 !== void 0 ? _80 : '96',
            Catalyst: (_83 = (_82 = (_81 = filters[4]) === null || _81 === void 0 ? void 0 : _81.values[3]) === null || _82 === void 0 ? void 0 : _82.id) !== null && _83 !== void 0 ? _83 : '117',
            Polearm: (_86 = (_85 = (_84 = filters[4]) === null || _84 === void 0 ? void 0 : _84.values[4]) === null || _85 === void 0 ? void 0 : _85.id) !== null && _86 !== void 0 ? _86 : '126'
        };
    }
}
exports.CharacterFilters = CharacterFilters;
Object.defineProperty(CharacterFilters, "ElementalType", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: {
        Pyro: '737',
        Hydro: '745',
        Dendro: '763',
        Electro: '780',
        Anemo: '789',
        Cryo: '803',
        Geo: '814'
    }
});
Object.defineProperty(CharacterFilters, "Region", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: {
        Mondstadt: '27',
        LiyueHarbor: '43',
        InazumaCity: '60',
        Snezhnaya: '1414',
        Sumeru: '1418',
        Fontaine: '1434',
        Natlan: '1450'
    }
});
Object.defineProperty(CharacterFilters, "Quality", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: {
        Star5: '3',
        Star4: '16'
    }
});
Object.defineProperty(CharacterFilters, "BonusAttributesFromAscension", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: {
        CRITDMG: '456',
        ElementalMastery: '481',
        EnergyRecharge: '488',
        CRITRate: '501',
        HP: '515',
        HealingBonus: '529',
        PhysicalDMGBonus: '541',
        ATK: '558',
        DEF: '560',
        PyroDMGBonus: '584',
        HydroDMGBonus: '594',
        DendroDMGBonus: '609',
        ElectroDMGBonus: '615',
        CryoDMGBonus: '628',
        AnemoDMGBonus: '649',
        GeoDMGBonus: '661'
    }
});
Object.defineProperty(CharacterFilters, "WeaponType", {
    enumerable: true,
    configurable: true,
    writable: true,
    value: {
        Sword: '72',
        Claymore: '81',
        Bow: '96',
        Catalyst: '117',
        Polearm: '126'
    }
});
//# sourceMappingURL=CharacterFilters.js.map